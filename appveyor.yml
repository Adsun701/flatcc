version: "win#{build}"

image: Visual Studio 2015

init:
  - git config --global core.autocrlf input
  - cmake --version
  - msbuild /version

shallow_clone: true

clone_folder: c:\projects\flatcc

environment:
  matrix:
    - arch: x86
      compiler: msvc2015
      backend: vs2015

    - arch: x64
      compiler: msvc2015
      backend: vs2015

configuration:
  - Debug
 #- Release

install:
  # Install Meson
  - set PATH=C:\Python35\scripts;%PATH%
  - echo installing meson
  - pip3 install meson
  - meson --version

  # Configure MSBuild
  - if %compiler%==msvc2010 ( call "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\vcvarsall.bat" %arch% )
  - if %compiler%==msvc2015 ( call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %arch% )
  - if %compiler%==msvc2017 ( call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\Tools\VsDevCmd.bat" -arch=%arch% )
  - MSBuild /v

  # Install Ninja Build
    
  - set NINJA_URL="https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-win.zip"
  - appveyor DownloadFile %NINJA_URL% -FileName ninja.zip
  - 7z x ninja.zip -oC:\projects\deps\ninja > nul
  - set PATH=C:\projects\deps\ninja;%PATH%
  - ninja --version

skip_tags: true

before_build:
  - echo Running cmake...
  - cd c:\projects\flatcc
  - mkdir build\MSVC
  - cd build\MSVC
  - if "%arch%"=="x86" cmake -G "Visual Studio 14 2015" -DCMAKE_BUILD_TYPE=%configuration% ..\..
  - if "%arch%"=="x64" cmake -G "Visual Studio 14 2015 Win64" -DCMAKE_BUILD_TYPE=%configuration% ..\..

build:
  parallel: true # enable MSBuild parallel builds
  project: c:\projects\flatcc\build\MSVC\FlatCC.sln

test_script:
  - ctest -C "%configuration%" -VV

